{"version":3,"sources":["order-book/order-book.util.ts","order-book/order-book.tsx","app/logo.svg","app/app.tsx","reportWebVitals.ts","index.tsx"],"names":["getBookTickerStream","symbol","callback","streamName","ws","WebSocket","addEventListener","initWebSocket","toLowerCase","event","rawData","JSON","parse","data","b","B","a","A","initialBtcBooKState","u","s","OrderBook","useState","btcBook","setBtcBook","useEffect","close","className","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAaaA,EAAsB,SAACC,EAAgBC,GAAjB,OARb,SAACC,EAAoBD,GACvC,IAAME,EAAK,IAAIC,UAHM,mCAGuBF,GAI5C,OAFAC,EAAGE,iBAAiB,UAAWJ,GAExBE,EAIPG,CAAc,IAAD,OAAKN,EAAOO,cAAZ,gBAAwC,SAACC,GAClD,IAAMC,EAAuCC,KAAKC,MAAMH,EAAMI,MAE9DX,EAAS,2BACFQ,GADC,IAEJI,GAAIJ,EAAQI,EACZC,GAAIL,EAAQK,EACZC,GAAIN,EAAQM,EACZC,GAAIP,EAAQO,S,eCjBlBC,EAAgD,CAClDC,EAAG,EACHC,EAAG,GACHN,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAGMI,EAAY,WAAO,IAAD,EACGC,mBAASJ,GADZ,mBACpBK,EADoB,KACXC,EADW,KAS3B,OANAC,qBAAU,WACN,IAAMrB,EAAKJ,EAAoB,WAAW,SAACa,GAAD,OAAUW,EAAWX,MAE/D,OAAO,kBAAMT,EAAGsB,WACjB,IAEI,sBAAKC,UAAU,OAAf,UACH,oBAAGA,UAAU,SAAb,iBAEKJ,EAAQH,KAGb,mBAAGO,UAAU,YAAb,SAA0BJ,EAAQT,IAClC,mBAAGa,UAAU,UAAb,SAAwBJ,EAAQR,IAEhC,mBAAGY,UAAU,YAAb,SAA0BJ,EAAQP,IAClC,mBAAGW,UAAU,UAAb,SAAwBJ,EAAQN,QCjCzB,MAA0B,iC,MCkB1BW,MAZf,WACI,OACI,qBAAKD,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,SAE7C,cAAC,EAAD,UCEGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0326e61.chunk.js","sourcesContent":["import {FnType} from \"../type/fn.type\";\nimport {IndividualSymbolBookType, RawIndividualSymbolBookType} from \"../type/individual-symbol-book.type\";\n\nconst baseWebSocketUrl = 'wss://stream.binance.com:9443/ws';\n\nconst initWebSocket = (streamName: string, callback: FnType<MessageEvent<string>>) => {\n    const ws = new WebSocket(baseWebSocketUrl + streamName);\n\n    ws.addEventListener('message', callback);\n\n    return ws;\n}\n\nexport const getBookTickerStream = (symbol: string, callback: FnType<IndividualSymbolBookType>) =>\n    initWebSocket(`/${symbol.toLowerCase()}@bookTicker`, (event) => {\n        const rawData: RawIndividualSymbolBookType = JSON.parse(event.data);\n\n        callback({\n            ...rawData,\n            b: +rawData.b,\n            B: +rawData.B,\n            a: +rawData.a,\n            A: +rawData.A,\n        })\n    });\n","import {getBookTickerStream} from \"./order-book.util\";\nimport {useEffect, useState} from \"react\";\nimport {IndividualSymbolBookType} from \"../type/individual-symbol-book.type\";\nimport './order-book.css';\n\nconst initialBtcBooKState: IndividualSymbolBookType = {\n    u: 0,\n    s: '',\n    b: 0,\n    B: 0,\n    a: 0,\n    A: 0\n};\n\nexport const OrderBook = () => {\n    const [btcBook, setBtcBook] = useState(initialBtcBooKState);\n\n    useEffect(() => {\n        const ws = getBookTickerStream('BTCUSDT', (data) => setBtcBook(data));\n\n        return () => ws.close();\n    }, []);\n\n    return <div className=\"root\">\n        <p className=\"symbol\">\n            Test\n            {btcBook.s}\n        </p>\n\n        <p className=\"bid-price\">{btcBook.b}</p>\n        <p className=\"bid-qty\">{btcBook.B}</p>\n\n        <p className=\"ask-price\">{btcBook.a}</p>\n        <p className=\"ask-qty\">{btcBook.A}</p>\n    </div>;\n}\n","export default __webpack_public_path__ + \"static/media/logo.7f465dc0.svg\";","import React from 'react';\n\nimport {OrderBook} from \"../order-book/order-book\";\nimport logo from './logo.svg';\nimport './app.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n\n            <OrderBook/>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}